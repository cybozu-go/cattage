apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-leader-election-role'
  namespace: '{{ .Release.Namespace }}'
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-manager-role'
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - namespaces
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - argoproj.io
    resources:
      - applications
      - appprojects
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - syncwindows
      - tenants
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - syncwindows/finalizers
      - tenants/finalizers
    verbs:
      - update
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - syncwindows/status
      - tenants/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
    verbs:
      - bind
      - escalate
      - get
      - list
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-syncwindow-editor-role'
rules:
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - syncwindows
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - syncwindows/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-syncwindow-viewer-role'
rules:
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - syncwindows
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - syncwindows/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: '{{ template "cattage.fullname" . }}-tenant-viewer-role'
rules:
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - tenants
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cattage.cybozu.io
    resources:
      - tenants/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-leader-election-rolebinding'
  namespace: '{{ .Release.Namespace }}'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: '{{ template "cattage.fullname" . }}-leader-election-role'
subjects:
  - kind: ServiceAccount
    name: '{{ template "cattage.fullname" . }}-controller-manager'
    namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-manager-rolebinding'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ template "cattage.fullname" . }}-manager-role'
subjects:
  - kind: ServiceAccount
    name: '{{ template "cattage.fullname" . }}-controller-manager'
    namespace: '{{ .Release.Namespace }}'
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-webhook-service'
  namespace: '{{ .Release.Namespace }}'
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: webhook-server
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ template "cattage.fullname" . }}-serving-cert'
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-mutating-webhook-configuration'
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: '{{ template "cattage.fullname" . }}-webhook-service'
        namespace: '{{ .Release.Namespace }}'
        path: /mutate-cattage-cybozu-io-v1beta1-tenant
    failurePolicy: Fail
    name: mtenant.kb.io
    rules:
      - apiGroups:
          - cattage.cybozu.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - tenants
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ template "cattage.fullname" . }}-serving-cert'
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "cattage.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "cattage.chart" . }}'
  name: '{{ template "cattage.fullname" . }}-validating-webhook-configuration'
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: '{{ template "cattage.fullname" . }}-webhook-service'
        namespace: '{{ .Release.Namespace }}'
        path: /validate-argoproj-io-application
    failurePolicy: Fail
    name: vapplication.kb.io
    rules:
      - apiGroups:
          - argoproj.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - applications
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: '{{ template "cattage.fullname" . }}-webhook-service'
        namespace: '{{ .Release.Namespace }}'
        path: /validate-cattage-cybozu-io-v1beta1-tenant
    failurePolicy: Fail
    name: vtenant.kb.io
    rules:
      - apiGroups:
          - cattage.cybozu.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - tenants
    sideEffects: None
